# ---
# - name: Create directory
#   become: true
#   file:
#     path: /home/ubuntu/backend
#     state: directory

# - name: Copy compressed backend folder
#   become: true
#   unarchive:
#     src: ~/project/artifact.tar.gz
#     dest: /home/ubuntu/backend
#     owner: ubuntu

# # - name: Run the web server
# #   become: true
# #   shell:
# #     cmd: |
# #       cd /home/ubuntu/backend
# #       npm install
# #       pm2 stop default
# #       pm2 delete default
# #       pm2 start npm -- start
# - name: start app
#   become: true
#   shell: |
#     cd /home/ubuntu/backend
#     npm install
#     ls
#     pm2 delete all
#     pm2 start npm -- start

#   environment:
#     ENVIRONMENT: production
#     TYPEORM_CONNECTION: "{{ lookup('env', 'TYPEORM_CONNECTION') }}"
#     TYPEORM_MIGRATIONS_DIR: "./migrations"
#     TYPEORM_MIGRATIONS: "./migrations/*.js"
#     TYPEORM_ENTITIES: "./modules/domain/**/*.entity.js"
#     TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST') }}"
#     TYPEORM_PORT: "{{ lookup('env', 'TYPEORM_PORT') }}"
#     TYPEORM_USERNAME: "{{ lookup('env', 'TYPEORM_USERNAME') }}"
#     TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD') }}"
#     TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE') }}"



---
- name: Create directory
  become: true
  file:
    path: /home/ubuntu/backend
    state: directory

# - name: Copy compressed backend folder
#   become: true
#   unarchive:
#     src: /home/root/project/artifact.tar.gz
#     dest: /home/ubuntu/backend
#    # remote_src: yes  # This is important if the source is on the remote machine
#     owner: ubuntu
#     group: ubuntu  # It's a good practice to also set the group

- name: Copy compressed backend folder
  become: true
  unarchive:
    src: ~/project/artifact.tar.gz
    dest: /home/ubuntu/backend
    owner: ubuntu

- name: Run the web server
  become: true
  shell: |
    cd ~/backend
    npm install --force
    pm2 stop default
    pm2 start npm -- start
  register: command_output

- name: Display command output 
  debug:  
     var: command_output.stdout_lines

  # args:
  #   executable: /bin/bash  # Specify the shell to execute the command
  # become_user: ubuntu  # Run the shell commands as the ubuntu user

    # pm2 stop backend
    # pm2 delete backend